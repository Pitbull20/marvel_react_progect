{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/errorMesssage.js","servises/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","apiBase","apiKey","getAllCharacters","offset","res","results","map","transformCharacter","getCharacter","id","getAllComics","comics","transformComics","getComic","char","name","descpription","description","slice","thumbnail","path","extension","homepage","urls","wiki","items","title","pageCount","language","textObjects","price","prices","ErrorBoundary","props","state","errorInfo","console","log","this","setState","children","Component","AppBanner","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","setOffset","setCharEnded","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","charEnded","useEffect","arr","item","i","imgStyle","to","prise","renderItems","errorMessage","spinner","Spinner","onClick","ComicsPage"],"mappings":"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","file":"static/js/1.835cae16.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'block',\r\n\t\t\t\twidth: '250px',\r\n\t\t\t\theight: '250px',\r\n\t\t\t\tobjectFit: 'contain',\r\n\t\t\t\tmargin: '0 auto',\r\n\t\t\t}}\r\n\t\t\tsrc={img}\r\n\t\t\talt='error'\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\tconst apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst apiKey = '67917fa6e0f3d0853c5b2e5c84f10d51';\r\n\tlet baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${apiBase}characters?limit=9&offset=${offset}&apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(transformCharacter);\r\n\t};\r\n\tconst getCharacter = async id => {\r\n\t\tconst res = await request(\r\n\t\t\t`${apiBase}characters/${id}?apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn transformCharacter(res.data.results[0]);\r\n\t};\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst comics = await request(\r\n\t\t\t`${apiBase}comics?limit=8&offset=${offset}&apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn comics.data.results.map(transformComics);\r\n\t};\r\n\tconst getComic = async id => {\r\n\t\tconst res = await request(\r\n\t\t\t`https://gateway.marvel.com:443/v1/public/comics/${id}?apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn transformComics(res.data.results[0]);\r\n\t};\r\n\tconst transformCharacter = char => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescpription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 200)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls.url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\tconst transformComics = comics => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: 'No information about the number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: 'not available',\r\n\t\t};\r\n\t};\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tclearError,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;\r\n","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(\r\n        async (\r\n            url,\r\n            method = 'GET',\r\n            body = null,\r\n            headers = {'Content-Type': 'application/json'}\r\n        ) => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await fetch(url, {method, body, headers});\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Could not fetch ${url}, status: ${response.status}`\r\n                    );\r\n                }\r\n                const data = await response.json();\r\n                setLoading(false);\r\n                return data;\r\n            } catch (error) {\r\n                setLoading(false);\r\n                setError(error.message);\r\n                throw error;\r\n            }\r\n        }, []\r\n    );\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError};\r\n};\r\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/errorMesssage';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\terror: false,\r\n\t\t};\r\n\t}\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({ error: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage />;\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n\treturn (\n\t\t<div className='app__banner'>\n\t\t\t<img src={avengers} alt='Avengers' />\n\t\t\t<div className='app__banner-text'>\n\t\t\t\tNew comics every week!\n\t\t\t\t<br />\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\t\t\t<img src={avengersLogo} alt='Avengers logo' />\n\t\t</div>\n\t);\n};\n\nexport default AppBanner;\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../servises/MarvelService';\nimport ErrorMessage from '../errorMessage/errorMesssage';\nimport Spinner from './../Spinner/Spinner';\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\t// eslint-disable-next-line\n\tconst [charEnded, setCharEnded] = useState(false);\n\tconst { loading, error, getAllComics } = useMarvelService();\n\n\tuseEffect(() => {\n\t\t//eslint-disable-next-line\n\t\tonRequest(offset, true);\n\t\t//eslint-disable-next-line\n\t}, []);\n\tfunction onRequest(offset, initial) {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllComics(offset).then(onComicsListLoaded);\n\t}\n\tfunction onComicsListLoaded(newComicsList) {\n\t\tlet ended = false;\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetComicsList(comicsList => [...comicsList, ...newComicsList]);\n\t\tsetNewItemLoading(newItemLoading => false);\n\t\tsetOffset(offset => offset + 8);\n\t\t//eslint-disable-next-line\n\t\tsetCharEnded(charEnded => ended);\n\t}\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: 'cover' };\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t\t\t) {\n\t\t\t\timgStyle = { objectFit: 'unset' };\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<li key={i} className='comics__item'>\n\t\t\t\t\t<Link to={`comics/${item.id}`}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={item.thumbnail}\n\t\t\t\t\t\t\talt='ultimate war'\n\t\t\t\t\t\t\tstyle={imgStyle}\n\t\t\t\t\t\t\tclassName='comics__item-img'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='comics__item-name'>{item.title}</div>\n\t\t\t\t\t\t<div className='comics__item-price'>\n\t\t\t\t\t\t\t{`${item.prise}$` || 'NOT AVAILABLE'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\treturn <ul className='comics__grid'>{items}</ul>;\n\t}\n\tconst items = renderItems(comicsList);\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\treturn (\n\t\t<div className='comics__list'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button className='button button__main button__long'>\n\t\t\t\t<div className='inner' onClick={() => onRequest(offset, false)}>\n\t\t\t\t\tload more\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default ComicsList;\n","import AppBanner from '../appBanner/AppBanner';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<AppBanner />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<ComicsList />\r\n\t\t\t</ErrorBoundary>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}