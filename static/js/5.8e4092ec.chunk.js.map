{"version":3,"sources":["resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/—ÅharSearchForm/CharSearchForm.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js","components/errorMessage/error.gif","components/errorMessage/errorMesssage.js","servises/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js"],"names":["View","char","name","descpription","thumbnail","homepage","wiki","imgStyle","objectFit","className","src","alt","style","href","RandomChar","useState","setChar","useMarvelService","loading","error","getCharacter","clearError","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","display","Skeleton","CharSearchForm","getCharacterByName","results","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","comics","CharInfo","charId","skeleton","MainPage","selectedChar","ErrorBoundary","decoration","ErrorMessage","width","height","margin","img","setLoading","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","useHttp","apiBase","apiKey","res","transformCharacter","getAllComics","transformComics","getComic","description","slice","path","extension","urls","title","pageCount","language","textObjects","price","prices","state","errorInfo","console","log","this","setState","children","Component"],"mappings":"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","file":"static/js/5.8e4092ec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../servises/MarvelService';\nimport Spinner from './../Spinner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMesssage';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState(null);\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\t// eslint-disable-next-line\n\t}, []);\n\tconst onCharLoaded = char => {\n\t\tsetChar(char);\n\t};\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n\t\tgetCharacter(id).then(onCharLoaded);\n\t};\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className='randomchar'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className='randomchar__static'>\n\t\t\t\t<p className='randomchar__title'>\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className='randomchar__title'>Or choose another one</p>\n\t\t\t\t<button onClick={updateChar} className='button button__main'>\n\t\t\t\t\t<div className='inner'>try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img\n\t\t\t\t\tsrc={mjolnir}\n\t\t\t\t\talt='mjolnir'\n\t\t\t\t\tclassName='randomchar__decoration'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, descpription, thumbnail, homepage, wiki } = char;\n\tlet imgStyle = { objectFit: 'cover' };\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'contain' };\n\t}\n\n\treturn (\n\t\t<div className='randomchar__block'>\n\t\t\t<img\n\t\t\t\tsrc={thumbnail}\n\t\t\t\talt='Random character'\n\t\t\t\tclassName='randomchar__img'\n\t\t\t\tstyle={imgStyle}\n\t\t\t/>\n\t\t\t<div className='randomchar__info'>\n\t\t\t\t<p className='randomchar__name'>{name}</p>\n\t\t\t\t<p className='randomchar__descr'>{descpription}</p>\n\t\t\t\t<div className='randomchar__btns'>\n\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from 'react';\nimport useMarvelService from './../../servises/MarvelService';\nimport ErrorMessage from '../errorMessage/errorMesssage';\nimport Spinner from './../Spinner/Spinner';\nimport PropTypes from 'prop-types';\nimport './charList.scss';\n\nconst CharList = props => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\tconst { loading, error, getAllCharacters } = useMarvelService();\n\tuseEffect(() => {\n\t\t// eslint-disable-next-line\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tfunction onRequest(offset, initial) {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllCharacters(offset).then(onCharListLoaded);\n\t}\n\tfunction onCharListLoaded(newCharList) {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharList(charList => [...charList, ...newCharList]);\n\t\tsetNewItemLoading(newItemLoading => false);\n\t\tsetOffset(offset => offset + 9);\n\t\tsetCharEnded(charEnded => ended);\n\t}\n\tconst itemRefs = useRef([]);\n\n\tfunction focusOnItem(id) {\n\t\t// –Ø —Ä–µ–∞–ª–∏–∑–æ–≤–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç —á—É—Ç—å —Å–ª–æ–∂–Ω–µ–µ, –∏ —Å –∫–ª–∞—Å—Å–æ–º –∏ —Å —Ñ–æ–∫—É—Å–æ–º\n\t\t// –ù–æ –≤ —Ç–µ–æ—Ä–∏–∏ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–æ–∫—É—Å, –∏ –µ–≥–æ –≤ —Å—Ç–∏–ª—è—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–º–µ—Å—Ç–æ –∫–ª–∞—Å—Å–∞\n\t\t// –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, —Ä–µ—à–µ–Ω–∏–µ —Å css-–∫–ª–∞—Å—Å–æ–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, –≤—ã–Ω–µ—Å—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n\t\t// –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç. –ù–æ –∫–æ–¥–∞ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ, –ø–æ—è–≤–∏—Ç—Å—è –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\n\t\t// –∏ –Ω–µ —Ñ–∞–∫—Ç, —á—Ç–æ –º—ã –≤—ã–∏–≥—Ä–∞–µ–º –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞ —Å—á–µ—Ç –±–û–ª—å—à–µ–≥–æ –∫–æ–ª-–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n\n\t\t// –ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –Ω–µ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è–π—Ç–µ —Ä–µ—Ñ–∞–º–∏, —Ç–æ–ª—å–∫–æ –≤ –∫—Ä–∞–π–Ω–∏—Ö —Å–ª—É—á–∞—è—Ö\n\t\titemRefs.current.forEach(item =>\n\t\t\titem.classList.remove('char__item_selected')\n\t\t);\n\t\titemRefs.current[id].classList.add('char__item_selected');\n\t\titemRefs.current[id].focus();\n\t}\n\n\t// –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏,\n\t// —á—Ç–æ–±—ã –Ω–µ –ø–æ–º–µ—â–∞—Ç—å —Ç–∞–∫—É—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –º–µ—Ç–æ–¥ render\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: 'cover' };\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t\t\t) {\n\t\t\t\timgStyle = { objectFit: 'unset' };\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName='char__item'\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={el => (itemRefs.current[i] = el)}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={e => {\n\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={item.thumbnail}\n\t\t\t\t\t\talt={item.name}\n\t\t\t\t\t\tstyle={imgStyle}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='char__name'>{item.name}</div>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\t// –ê —ç—Ç–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤—ã–Ω–µ—Å–µ–Ω–∞ –¥–ª—è —Ü–µ–Ω—Ç—Ä–æ–≤–∫–∏ —Å–ø–∏–Ω–Ω–µ—Ä–∞/–æ—à–∏–±–∫–∏\n\t\treturn <ul className='char__grid'>{items}</ul>;\n\t}\n\tconst items = renderItems(charList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className='char__list'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: charEnded ? 'none' : 'block' }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className='inner'>load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n\treturn (\n\t\t<>\n\t\t\t<p className='char__select'>\n\t\t\t\tPlease select a character to see information\n\t\t\t</p>\n\t\t\t<div className='skeleton'>\n\t\t\t\t<div className='pulse skeleton__header'>\n\t\t\t\t\t<div className='pulse skeleton__circle'></div>\n\t\t\t\t\t<div className='pulse skeleton__mini'></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='pulse skeleton__block'></div>\n\t\t\t\t<div className='pulse skeleton__block'></div>\n\t\t\t\t<div className='pulse skeleton__block'></div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Skeleton;\n","import { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage,} from 'formik';\r\nimport *  as Yup from 'yup'\r\nimport { Link } from 'react-router-dom';\r\nimport useMarvelService from '../../servises/MarvelService';\r\nimport './—ÅharSearchForm.scss';\r\nimport ErrorMessage from './../errorMessage/errorMesssage';\r\n\r\nconst CharSearchForm = () => {\r\n\tconst [char, setChar] = useState(null);\r\n\tconst { loading, error, getCharacterByName, clearError } =\r\n\t\tuseMarvelService();\r\n\r\n\tconst onCharLoaded = char => {\r\n\t\tsetChar(char);\r\n\t};\r\n\r\n\tconst updateChar = name => {\r\n\t\tclearError();\r\n\r\n\t\tgetCharacterByName(name).then(onCharLoaded);\r\n\t};\r\n\r\n\tconst errorMessage = error ? (\r\n\t\t<div className='char__search-critical-error'>\r\n\t\t\t<ErrorMessage />\r\n\t\t</div>\r\n\t) : null;\r\n\tconst results = !char ? null : char.length > 0 ? (\r\n\t\t<div className='char__search-wrapper'>\r\n\t\t\t<div className='char__search-success'>\r\n\t\t\t\tThere is! Visit {char[0].name} page?\r\n\t\t\t</div>\r\n\t\t\t<Link\r\n\t\t\t\tto={`/characters/${char[0].id}`}\r\n\t\t\t\tclassName='button button__secondary'\r\n\t\t\t>\r\n\t\t\t\t<div className='inner'>To page</div>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className='char__search-error'>\r\n\t\t\tThe character was not found. Check the name and try again\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className='char__search-form'>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tcharName: '',\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\t\tcharName: Yup.string().required('This field is required'),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={({ charName }) => {\r\n\t\t\t\t\tupdateChar(charName);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<label className='char__search-label' htmlFor='charName'>\r\n\t\t\t\t\t\tOr find a character by name:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div className='char__search-wrapper'>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tid='charName'\r\n\t\t\t\t\t\t\tname='charName'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tclassName='button button__main'\r\n\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className='inner'>find</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<FormikErrorMessage\r\n\t\t\t\t\t\tcomponent='div'\r\n\t\t\t\t\t\tclassName='char__search-error'\r\n\t\t\t\t\t\tname='charName'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t\t{results}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CharSearchForm;\r\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from './../../servises/MarvelService';\nimport Spinner from '../Spinner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMesssage';\nimport Skeleton from '../skeleton/Skeleton';\nimport SearchPanel from '../—ÅharSearchForm/CharSearchForm';\nimport './charInfo.scss';\n\nconst CharInfo = props => {\n\tconst [char, setChar] = useState(null);\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\t// eslint-disable-next-line\n\t}, [props.charId]);\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst { charId } = props;\n\t\tif (!charId) {\n\t\t\treturn;\n\t\t}\n\t\tgetCharacter(charId).then(onCharLoaded);\n\t};\n\n\tconst onCharLoaded = char => {\n\t\tsetChar(char);\n\t};\n\tconst skeleton = char || loading || error ? null : <Skeleton />;\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className='char__info'>\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, descpription, thumbnail, homepage, wiki, comics } = char;\n\n\tlet imgStyle = { objectFit: 'cover' };\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'contain' };\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className='char__basics'>\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className='char__info-name'>{name}</div>\n\t\t\t\t\t<div className='char__btns'>\n\t\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='char__descr'>{descpription}</div>\n\t\t\t<div className='char__comics'>Comics:</div>\n\t\t\t<ul className='char__comics-list'>\n\t\t\t\t{comics.length > 0\n\t\t\t\t\t? null\n\t\t\t\t\t: 'There is no comics with this character'}\n\t\t\t\t{comics.map((item, i) => {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tif (i > 9) return;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className='char__comics-item'>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t<SearchPanel />\n\t\t</>\n\t);\n};\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n};\n\nexport default CharInfo;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport ErrorBoundary from './../errorBoundary/ErrorBoundary';\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\tconst onCharSelected = id => {\r\n\t\tsetChar(id);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\r\n\t\t\t<div className='char__content'>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharInfo charId={selectedChar} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t<img className='bg-decoration' src={decoration} alt='vision' />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MainPage;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'block',\r\n\t\t\t\twidth: '250px',\r\n\t\t\t\theight: '250px',\r\n\t\t\t\tobjectFit: 'contain',\r\n\t\t\t\tmargin: '0 auto',\r\n\t\t\t}}\r\n\t\t\tsrc={img}\r\n\t\t\talt='error'\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\tconst apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst apiKey = '67917fa6e0f3d0853c5b2e5c84f10d51';\r\n\tlet baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${apiBase}characters?limit=9&offset=${offset}&apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(transformCharacter);\r\n\t};\r\n\tconst getCharacterByName = async name => {\r\n\t\tconst res = await request(\r\n\t\t\t`${apiBase}characters?name=${name}&apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(transformCharacter);\r\n\t};\r\n\tconst getCharacter = async id => {\r\n\t\tconst res = await request(\r\n\t\t\t`${apiBase}characters/${id}?apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn transformCharacter(res.data.results[0]);\r\n\t};\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst comics = await request(\r\n\t\t\t`${apiBase}comics?limit=8&offset=${offset}&apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn comics.data.results.map(transformComics);\r\n\t};\r\n\tconst getComic = async id => {\r\n\t\tconst res = await request(\r\n\t\t\t`https://gateway.marvel.com:443/v1/public/comics/${id}?apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn transformComics(res.data.results[0]);\r\n\t};\r\n\tconst transformCharacter = char => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescpription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 200)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls.url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\tconst transformComics = comics => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: 'No information about the number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: 'not available',\r\n\t\t};\r\n\t};\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tclearError,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t\tgetCharacterByName,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;\r\n","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(\r\n        async (\r\n            url,\r\n            method = 'GET',\r\n            body = null,\r\n            headers = {'Content-Type': 'application/json'}\r\n        ) => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await fetch(url, {method, body, headers});\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Could not fetch ${url}, status: ${response.status}`\r\n                    );\r\n                }\r\n                const data = await response.json();\r\n                setLoading(false);\r\n                return data;\r\n            } catch (error) {\r\n                setLoading(false);\r\n                setError(error.message);\r\n                throw error;\r\n            }\r\n        }, []\r\n    );\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError};\r\n};\r\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/errorMesssage';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\terror: false,\r\n\t\t};\r\n\t}\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({ error: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage />;\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;\r\n"],"sourceRoot":""}