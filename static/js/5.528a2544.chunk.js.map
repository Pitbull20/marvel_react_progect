{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/errorMesssage.js","servises/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","apiBase","apiKey","getAllCharacters","offset","res","results","map","transformCharacter","getCharacter","id","getAllComics","comics","transformComics","getComic","char","name","descpription","description","slice","thumbnail","path","extension","homepage","urls","wiki","items","title","pageCount","language","textObjects","price","prices","ErrorBoundary","props","state","errorInfo","console","log","this","setState","children","Component","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/5.528a2544.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'block',\r\n\t\t\t\twidth: '250px',\r\n\t\t\t\theight: '250px',\r\n\t\t\t\tobjectFit: 'contain',\r\n\t\t\t\tmargin: '0 auto',\r\n\t\t\t}}\r\n\t\t\tsrc={img}\r\n\t\t\talt='error'\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\tconst apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst apiKey = '67917fa6e0f3d0853c5b2e5c84f10d51';\r\n\tlet baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${apiBase}characters?limit=9&offset=${offset}&apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(transformCharacter);\r\n\t};\r\n\tconst getCharacter = async id => {\r\n\t\tconst res = await request(\r\n\t\t\t`${apiBase}characters/${id}?apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn transformCharacter(res.data.results[0]);\r\n\t};\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst comics = await request(\r\n\t\t\t`${apiBase}comics?limit=8&offset=${offset}&apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn comics.data.results.map(transformComics);\r\n\t};\r\n\tconst getComic = async id => {\r\n\t\tconst res = await request(\r\n\t\t\t`https://gateway.marvel.com:443/v1/public/comics/${id}?apikey=${apiKey}`\r\n\t\t);\r\n\t\treturn transformComics(res.data.results[0]);\r\n\t};\r\n\tconst transformCharacter = char => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescpription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 200)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls.url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\tconst transformComics = comics => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: 'No information about the number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: 'not available',\r\n\t\t};\r\n\t};\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tclearError,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;\r\n","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(\r\n        async (\r\n            url,\r\n            method = 'GET',\r\n            body = null,\r\n            headers = {'Content-Type': 'application/json'}\r\n        ) => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await fetch(url, {method, body, headers});\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Could not fetch ${url}, status: ${response.status}`\r\n                    );\r\n                }\r\n                const data = await response.json();\r\n                setLoading(false);\r\n                return data;\r\n            } catch (error) {\r\n                setLoading(false);\r\n                setError(error.message);\r\n                throw error;\r\n            }\r\n        }, []\r\n    );\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError};\r\n};\r\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/errorMesssage';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\terror: false,\r\n\t\t};\r\n\t}\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({ error: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage />;\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../servises/MarvelService';\nimport Spinner from './../Spinner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMesssage';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState(null);\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\t// eslint-disable-next-line\n\t}, []);\n\tconst onCharLoaded = char => {\n\t\tsetChar(char);\n\t};\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n\t\tgetCharacter(id).then(onCharLoaded);\n\t};\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className='randomchar'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className='randomchar__static'>\n\t\t\t\t<p className='randomchar__title'>\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className='randomchar__title'>Or choose another one</p>\n\t\t\t\t<button onClick={updateChar} className='button button__main'>\n\t\t\t\t\t<div className='inner'>try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img\n\t\t\t\t\tsrc={mjolnir}\n\t\t\t\t\talt='mjolnir'\n\t\t\t\t\tclassName='randomchar__decoration'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, descpription, thumbnail, homepage, wiki } = char;\n\tlet imgStyle = { objectFit: 'cover' };\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'contain' };\n\t}\n\n\treturn (\n\t\t<div className='randomchar__block'>\n\t\t\t<img\n\t\t\t\tsrc={thumbnail}\n\t\t\t\talt='Random character'\n\t\t\t\tclassName='randomchar__img'\n\t\t\t\tstyle={imgStyle}\n\t\t\t/>\n\t\t\t<div className='randomchar__info'>\n\t\t\t\t<p className='randomchar__name'>{name}</p>\n\t\t\t\t<p className='randomchar__descr'>{descpription}</p>\n\t\t\t\t<div className='randomchar__btns'>\n\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from 'react';\nimport useMarvelService from './../../servises/MarvelService';\nimport ErrorMessage from '../errorMessage/errorMesssage';\nimport Spinner from './../Spinner/Spinner';\nimport PropTypes from 'prop-types';\nimport './charList.scss';\n\nconst CharList = props => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\tconst { loading, error, getAllCharacters } = useMarvelService();\n\tuseEffect(() => {\n\t\t// eslint-disable-next-line\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tfunction onRequest(offset, initial) {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllCharacters(offset).then(onCharListLoaded);\n\t}\n\tfunction onCharListLoaded(newCharList) {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharList(charList => [...charList, ...newCharList]);\n\t\tsetNewItemLoading(newItemLoading => false);\n\t\tsetOffset(offset => offset + 9);\n\t\tsetCharEnded(charEnded => ended);\n\t}\n\tconst itemRefs = useRef([]);\n\n\tfunction focusOnItem(id) {\n\t\t// Я реализовал вариант чуть сложнее, и с классом и с фокусом\n\t\t// Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n\t\t// На самом деле, решение с css-классом можно сделать, вынеся персонажа\n\t\t// в отдельный компонент. Но кода будет больше, появится новое состояние\n\t\t// и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n\t\t// По возможности, не злоупотребляйте рефами, только в крайних случаях\n\t\titemRefs.current.forEach(item =>\n\t\t\titem.classList.remove('char__item_selected')\n\t\t);\n\t\titemRefs.current[id].classList.add('char__item_selected');\n\t\titemRefs.current[id].focus();\n\t}\n\n\t// Этот метод создан для оптимизации,\n\t// чтобы не помещать такую конструкцию в метод render\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: 'cover' };\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t\t\t) {\n\t\t\t\timgStyle = { objectFit: 'unset' };\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName='char__item'\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={el => (itemRefs.current[i] = el)}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={e => {\n\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={item.thumbnail}\n\t\t\t\t\t\talt={item.name}\n\t\t\t\t\t\tstyle={imgStyle}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='char__name'>{item.name}</div>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\t// А эта конструкция вынесена для центровки спиннера/ошибки\n\t\treturn <ul className='char__grid'>{items}</ul>;\n\t}\n\tconst items = renderItems(charList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className='char__list'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: charEnded ? 'none' : 'block' }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className='inner'>load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n\treturn (\n\t\t<>\n\t\t\t<p className='char__select'>\n\t\t\t\tPlease select a character to see information\n\t\t\t</p>\n\t\t\t<div className='skeleton'>\n\t\t\t\t<div className='pulse skeleton__header'>\n\t\t\t\t\t<div className='pulse skeleton__circle'></div>\n\t\t\t\t\t<div className='pulse skeleton__mini'></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='pulse skeleton__block'></div>\n\t\t\t\t<div className='pulse skeleton__block'></div>\n\t\t\t\t<div className='pulse skeleton__block'></div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Skeleton;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from './../../servises/MarvelService';\nimport Spinner from '../Spinner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMesssage';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\n\nconst CharInfo = props => {\n\tconst [char, setChar] = useState(null);\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\t// eslint-disable-next-line\n\t}, [props.charId]);\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst { charId } = props;\n\t\tif (!charId) {\n\t\t\treturn;\n\t\t}\n\t\tgetCharacter(charId).then(onCharLoaded);\n\t};\n\n\tconst onCharLoaded = char => {\n\t\tsetChar(char);\n\t};\n\tconst skeleton = char || loading || error ? null : <Skeleton />;\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className='char__info'>\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, descpription, thumbnail, homepage, wiki, comics } = char;\n\n\tlet imgStyle = { objectFit: 'cover' };\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'contain' };\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className='char__basics'>\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className='char__info-name'>{name}</div>\n\t\t\t\t\t<div className='char__btns'>\n\t\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='char__descr'>{descpription}</div>\n\t\t\t<div className='char__comics'>Comics:</div>\n\t\t\t<ul className='char__comics-list'>\n\t\t\t\t{comics.length > 0\n\t\t\t\t\t? null\n\t\t\t\t\t: 'There is no comics with this character'}\n\t\t\t\t{comics.map((item, i) => {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tif (i > 9) return;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className='char__comics-item'>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n};\n\nexport default CharInfo;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport ErrorBoundary from './../errorBoundary/ErrorBoundary';\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\tconst onCharSelected = id => {\r\n\t\tsetChar(id);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\r\n\t\t\t<div className='char__content'>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharInfo charId={selectedChar} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t<img className='bg-decoration' src={decoration} alt='vision' />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}